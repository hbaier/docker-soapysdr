name: docker-multiarch
on:
  push:
    branches:
      - experimental
      - testing
  release:
    types:
      - published
jobs:
  build:
    runs-on: ubuntu-18.04
    env:
      DOCKER_BUILDX_PLATFORM: "linux/amd64,linux/arm/v7"
      DOCKER_IMAGE_NAME: "hbaier/soapysdr"
    steps:
    - name: Checkout git repository
      uses: actions/checkout@v2
    - name: Install Docker CLI plugin buildx
      run: |
        mkdir -p $HOME/.docker/cli-plugins
        curl -fsSL https://github.com/docker/buildx/releases/download/${DOCKER_BUILDX_VERSION}/buildx-${DOCKER_BUILDX_VERSION}.linux-amd64 > $HOME/.docker/cli-plugins/docker-buildx
        chmod a+x $HOME/.docker/cli-plugins/docker-buildx
      env:
        DOCKER_BUILDX_VERSION: "v0.3.1"
    - name: Build Docker image
      run: |
        docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
        docker run -d -p 5000:5000 --name registry registry:2
        docker buildx create --use --driver docker-container --driver-opt network=host --name multiarch
        docker buildx inspect --bootstrap multiarch
        docker buildx build --platform ${DOCKER_BUILDX_PLATFORM} -t localhost:5000/myimage -o type=registry .
      env:
        DOCKER_CLI_EXPERIMENTAL: "enabled"
    - name: Test Docker image
      run: docker run ${DOCKER_RUN_OPTIONS} localhost:5000/myimage ${DOCKER_RUN_CMD}
      env:
        DOCKER_RUN_CMD: "--info"
        DOCKER_RUN_OPTIONS: "--rm --entrypoint /usr/bin/SoapySDRUtil"
    - name: Create Docker image tags
      run: |
        function join { local delimiter=$1; shift; echo -n "$1"; shift; printf "%s" "${@/#/$delimiter}"; }
        if [ ${GITHUB_REF:5:3} = 'tag' ]; then
          DOCKER_TAG_PATCH=${GITHUB_REF#refs/tags/}
          DOCKER_TAG_MINOR=${DOCKER_TAG_PATCH%.*}
          DOCKER_TAG_MAJOR=${DOCKER_TAG_PATCH%.*.*}
          DOCKER_TAG_LATEST=latest
          echo "::set-env name=DOCKER_BUILDX_TAG::$(join " -t " \
            ${DOCKER_IMAGE_NAME}:${DOCKER_TAG_PATCH} \
            ${DOCKER_IMAGE_NAME}:${DOCKER_TAG_MINOR} \
            ${DOCKER_IMAGE_NAME}:${DOCKER_TAG_MAJOR} \
            ${DOCKER_IMAGE_NAME}:${DOCKER_TAG_LATEST})"
        else
          DOCKER_TAG_BRANCH=${GITHUB_REF#refs/heads/}
          DOCKER_TAG_BRANCH_DATE=${DOCKER_TAG_BRANCH}-$(date +%Y%m%d)
          echo "::set-env name=DOCKER_BUILDX_TAG::$(join " -t " \
            ${DOCKER_IMAGE_NAME}:${DOCKER_TAG_BRANCH} \
            ${DOCKER_IMAGE_NAME}:${DOCKER_TAG_BRANCH_DATE})"
        fi
    - name: Push Docker image
      run: |
        echo ${DOCKER_REGISTRY_PASSWORD} | docker login -u ${DOCKER_REGISTRY_USERNAME} --password-stdin ${DOCKER_REGISTRY_SERVER}
        docker buildx build --platform ${DOCKER_BUILDX_PLATFORM} -t ${DOCKER_BUILDX_TAG} -o type=registry .
        docker logout ${DOCKER_REGISTRY_SERVER}
      env:
        DOCKER_CLI_EXPERIMENTAL: "enabled"
        DOCKER_REGISTRY_PASSWORD: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}
        DOCKER_REGISTRY_SERVER: "https://index.docker.io/v1/"
        DOCKER_REGISTRY_USERNAME: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
